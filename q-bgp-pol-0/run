#!/bin/python3

# Olivier Bonaventure, 2019

from inginious import input, feedback
import re
 
def removeSpaces(string):
    return re.sub('[\s+]', '', string)

def toList(string):
    return (removeSpaces(string.upper())).split(',')


def getASPath(string):
    return (removeSpaces(string.upper())).split(':')

# AS3 towards AS4
# q1: AS4
def checkq1(path):
    response = ""
    errors = 0
    grade = 0
    if(len(path) == 1 and path[0]=='0'):
        feedback.set_problem_result("failed", "q1")
        response += "Your answer to this question is incorrect. AS3 receives paths towards AS4.\n"
        feedback.set_problem_feedback(response, "q1")
        return grade
    if(len(path) != 1):
        feedback.set_problem_result("failed", "q1")
        response += "Your answer to this question is incorrect. AS3 has received only one path towards the prefix announced by AS4. Update your answer. \n"        
        feedback.set_problem_feedback(response, "q1")
        return grade

    try:
        # best
        p = getASPath(path[0])
        if(p[-1] != 'AS4'):
            response += "Your best path does not end on AS4.\n"
            errors += 1
        if(p != ['AS4']):
            response += "Your best path is incorrect. Remember that an AS always prefers routes with the shortest AS path and only advertises its best path to its peers.\n"
            errors+=2
        
            
    except IndexError as e:
        errors += 64
        pass

    if(errors > 0):
        feedback.set_problem_result("failed", "q1")
        response += "Your answer to this question is incorrect.\n"
        feedback.set_problem_feedback(response, "q1")
    else:
        feedback.set_problem_result("success", "q1")
        feedback.set_problem_feedback("Correct", "q1")
        grade += 25

    return grade


# AS4 routes
# q2: AS3:AS4

def checkq2(path):
    response = ""
    errors = 0
    grade = 0
    if(len(path) == 1 and path[0]=='0'):
        feedback.set_problem_result("failed", "q2")
        response += "Your answer to this question is incorrect. AS1 receives paths towards AS4\n"
        feedback.set_problem_feedback(response, "q2")
        return grade
    if(len(path) != 2):
        feedback.set_problem_result("failed", "q2")
        response += "Your answer to this question is incorrect. AS2 has received two paths towards AS4. Update your answer.\n"        
        feedback.set_problem_feedback(response, "q2")
        return grade

    try:
        # best
        p = getASPath(path[0])
        if(p[-1] != 'AS4'):
            response += "Your best path does not end on AS4.\n"
            errors += 1
        if(p != ['AS3', 'AS4']):
            response += "Your best path is incorrect. Remember that when there are no routing policies and all routes have the same local preference, an AS always prefers routes with the shortest AS path length. \n"
            errors+=2
        p = getASPath(path[1])
        if(p[-1] != 'AS4'):
            response += "Your second path does not end on AS4.\n"
            errors +=4 
        if(p != ['AS2', 'AS3', 'AS4']):
            response += "Your second path is incorrect.\n"
            errors+=8       
            
    except IndexError as e:
        errors += 64
        pass

    if(errors > 0):
        feedback.set_problem_result("failed", "q2")
        response += "Your answer to this question is incorrect.\n"
        feedback.set_problem_feedback(response, "q2")
    else:
        feedback.set_problem_result("success", "q2")
        feedback.set_problem_feedback("Correct", "q2")
        grade += 25

    return grade

# AS2
# q3: AS3:AS4, AS1:AS3:AS4

def checkq3(path):
    response = ""
    errors = 0
    grade = 0
    if(len(path) == 1 and path[0]=='0'):
        feedback.set_problem_result("failed", "q3")
        response += "Your answer to this question is incorrect. AS2 receives paths towards AS4\n"
        feedback.set_problem_feedback(response, "q3")
        return grade
    if(len(path) != 2):
        feedback.set_problem_result("failed", "q3")
        response += "Your answer to this question is incorrect. AS2 has received two paths towards AS4. Update your answer. \n"        
        feedback.set_problem_feedback(response, "q3")
        return grade

    try:
        # best
        p = getASPath(path[0])
        if(p[-1] != 'AS4'):
            response += "Your best path does not end on AS4.\n"
            errors += 1
        if(p != ['AS3','AS4']):
            response += "Your best path is incorrect. Remember that when there are no routing policies and all routes have the same local preference, an AS always prefers routes with the shortest AS path length. \n"
            errors+=2
        p = getASPath(path[1])
        if(p[-1] != 'AS4'):
            response += "Your second path does not end on AS4.\n"
            errors +=4 
        if(p != ['AS1', 'AS3', 'AS4']):
            response += "Your second path is incorrect.\n"
            errors+=8
            
    except IndexError as e:
        errors += 64
        pass

    if(errors > 0):
        feedback.set_problem_result("failed", "q3")
        response += "Your answer to this question is incorrect.\n"
        feedback.set_problem_feedback(response, "q3")
    else:
        feedback.set_problem_result("success", "q3")
        feedback.set_problem_feedback("Correct", "q3")
        grade += 25

    return grade


# AS5
# q4: AS2:AS3:AS4

def checkq4(path):
    response = ""
    errors = 0
    grade = 0
    if(len(path) == 1 and path[0]=='0'):
        feedback.set_problem_result("failed", "q4")
        response += "Your answer to this question is incorrect. AS5 receives paths towards AS1\n"
        feedback.set_problem_feedback(response, "q4")
        return grade
    if(len(path) != 1):
        feedback.set_problem_result("failed", "q4")
        response += "Your answer to this question is incorrect. AS5 has received one paths towards AS1. Remember that an AS only advertises its best path to its peer.  \n"        
        feedback.set_problem_feedback(response, "q4")
        return grade

    try:
        # best
        p = getASPath(path[0])
        if(p[-1] != 'AS4'):
            response += "Your best path does not end on AS4.\n"
            errors += 1
        if(p != ['AS2','AS3', 'AS4']):
            response += "Your best path is incorrect. Remember that when there are no routing policies, an AS always prefers the route with the shortest AS path length. \n"
            errors+=2
                    
    except IndexError as e:
        errors += 64
        pass

    if(errors > 0):
        feedback.set_problem_result("failed", "q4")
        response += "Your answer to this question is incorrect.\n"
        feedback.set_problem_feedback(response, "q4")
    else:
        feedback.set_problem_result("success", "q4")
        feedback.set_problem_feedback("Correct", "q4")
        grade += 25

    return grade

grade = 0


grade += checkq1(toList(input.get_input("q1")))
grade += checkq2(toList(input.get_input("q2")))
grade += checkq3(toList(input.get_input("q3")))
grade += checkq4(toList(input.get_input("q4")))




feedback.set_grade(grade)

if grade ==100:
    feedback.set_global_result("success")
else:
    feedback.set_global_result("failed")
# end
