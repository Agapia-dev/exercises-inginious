accessible: true
author: Olivier Bonaventure
categories:
- tcp
context: 'A TCP connection, as explained in the `TCP chapter <http://cnp3book.info.ucl.ac.be/2nd/html/protocols/tcp.html>`_
    of `Computer Networking: Principles, Protocols and Practice <http://cnp3book.info.ucl.ac.be/>`_
    always starts with a three-way-handshake. '
environment: mcq
evaluate: best
file: ''
groups: false
input_random: '0'
limits:
    memory: '100'
    time: '30'
    output: '2'
name: Reordering the three-way-handshake
network_grading: false
order: 29
problems:
    test:
        exclude:
        - tcp.flags.str
        - tcp.window_size
        - tcp.window_size_scalefactor
        - tcp.len
        - tcp.checksum
        name: Reorder the three-way-handshake
        hide:
            0:
            - tcp.flags.syn
            - tcp.flags.ack
            1:
            - tcp.flags.syn
            - tcp.flags.ack
            2:
            - tcp.flags.syn
            - tcp.flags.ack
        header: Can you correctly reorder the three segments that are used to establish
            a TCP connection and set the `SYN` and `ACK` flags correctly ?
        type: network-trace
        trace: tcp-rfc793-98-100.pcap.xml
        shuffle-feedback: ''
        redact: tcp.flags
        shuffle: true
        feedback:
            tcp.flags.ack: The first segment of the three-way-handshake is always
                the one with a `SYN` flag set and the `ACK` flag reset. The second
                segment has also the `SYN` flag set set and acknowledges the first
                one. The `SYN`flag is never set in the third segment.
            tcp.flags.syn: The first segment of the three-way-handshake is always
                the one with a `SYN` flag set and the `ACK` flag reset. The second
                segment has also the `SYN` flag set set and acknowledges the first
                one. The `SYN`flag is never set in the third segment.
run_cmd: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
