accessible: true
author: Olivier Bonaventure
categories: []
context: |-
    Network engineers often need to analyze packet traces. Here is a 2 minutes long packet trace that was collected on a Linux host that used Chrome, Firefox, thunderbird and the brave browser. By analyzing the trace with `wireshark <https://www.wireshark.org>`_, can you answer the following questions ?

    `https://inginious.org/course/cnp3/q-tcpdump-trace/tcpdump-long.pcap <https://inginious.org/course/cnp3/q-tcpdump-trace/tcpdump-long.pcap>`_

    .. raw:: html

        <script>
        $('#content').css("min-height", 0);

        bodyHeight = 0;
        function resizeAndPostSize() {
            if (document.getElementById("content")) {
                if (document.getElementById("content").scrollHeight != bodyHeight) {
                    bodyHeight = document.getElementById("content").scrollHeight;
                    window.parent.postMessage({height: bodyHeight}, "*");
                }
            }
        }

        var target = document.querySelector('body');

        var observer = new MutationObserver(resizeAndPostSize);

        var config = { attributes: true, subtree: true };

        observer.observe(target, config);
        $(window).ready(function() {
           $('#content').css("min-height", 0);
           setTimeout(resizeAndPostSize, 0);
        });
        </script>
environment: pyjavacpp
evaluate: best
file: ''
groups: false
input_random: '0'
limits:
    memory: '100'
    output: '2'
    time: '30'
name: Analyzing a packet trace
network_grading: false
problems:
    q1:
        optional: 'on'
        type: code_single_line
        name: Number of packets
        header: How many packets does this trace contains ?
        default: ''
    q2:
        optional: 'on'
        name: The IPv4 address of the captured host
        header: The packets in this trace were captured from a single host. What is
            the IPv4 address of this host ? Note that you will find many addresses
            in the trace, look for DNS requests or establishments of TCP connections
            (SYN packets) to find the client address.
        type: code_single_line
        default: ''
    q3:
        default: ''
        header: The packets in this trace were captured from a single host. What is
            the IPv6 address of this host ? Note that you will find many addresses
            in the trace, look for DNS requests or establishments of TCP connections
            (SYN packets) to find the client address.
        optional: 'on'
        name: The IPv6 address of the captured host
        type: code_single_line
    q4:
        name: TCP ports
        type: code_single_line
        default: ''
        header: What is the most frequent TCP destination port used in this trace
            ?
        optional: 'on'
    q5:
        default: ''
        type: code_single_line
        optional: 'on'
        name: The DNS resolver
        header: What is the IPv6 address of the DNS resolver used by this host ?
    q6:
        optional: 'on'
        header: How many connections were established on port 80 ?
        name: TCP connections on port 80
        default: ''
        type: code_single_line
    q7:
        type: code_single_line
        name: Mailserver
        default: ''
        optional: 'on'
        header: This trace contains one connection on port 587, which is used by a
            client to send an email to a mailserver. What is the name of the server
            contacted by this client ?
    q8:
        default: ''
        type: code_single_line
        optional: 'on'
        header: The trace contains four connections on port 993. What is the name
            of the server that was contacted ?
        name: Connections on port 993
    q9:
        default: ''
        type: code_single_line
        optional: 'on'
        name: Connections to IPv6 servers on TCP port 80
        header: The trace contains four connections to an IPv6 server on TCP port
            80. By looking at the content of the packets, can you infer the application
            that created those connections ?
    q10:
        type: code_single_line
        name: Connection on port 5228
        header: The trace contains a connection on an unusual port number, 5228. Looking
            at this this connection, it appears that it uses TLS. What is the name
            of the server that was contacted ?
        default: ''
        optional: 'on'
run_cmd: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
