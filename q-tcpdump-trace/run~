#!/bin/python3
# O. Bonaventure, 2019

from inginious import input, feedback, rst
import array

# a1 : 7833 packets
# a2: 192.168.0.27
r2="192.168.0.27"
# a3: 2a02:2788:484:962:1ccf:db50:51f:eb26
r3="2a02:2788:484:962:1ccf:db50:51f:eb26"
#a4 port 443
r4=443
# a5
r5="2a02:2788:fff0:7::3"
# a6
r6=10
# a7 AM0PR07CA0001.outlook.office365.com Microsoft ESMTP MAIL Service ready at Tue, 5 Nov 2019 07:41:46 +0000
r7="AM0PR07CA0001.outlook.office365.com"
#a8
r8="outlook.office365.com"
#a9 firefox, mozilla or gecko

#a10
r10="mtalk.google.com"

a1 = int(input.get_input("q1"),10)
a2= (input.get_input("q2")).lower().strip()
a3= (input.get_input("q3")).lower().strip()
a4 = int(input.get_input("q4"),10)
a5= (input.get_input("q5")).lower().strip()
a6 = int(input.get_input("q6"),10)
a7= (input.get_input("q7")).lower().strip()
a8= (input.get_input("q8")).lower().strip()
a9= (input.get_input("q9")).lower().strip()
a10=(input.get_input("q10")).lower().strip()

grade=0

# username is test, password te$t1234

if(a1==7833):
  feedback.set_problem_result("success","q1")
  grade+=10
  feedback.set_problem_feedback("Correct","q1")
else:
  feedback.set_problem_result("failed","q1")
  feedback.set_problem_feedback("In wireshark, you can obtain the number of packets of a trace by clicking on Statistics and then Capture File Properties.","q1")

if(a2==r2):
  feedback.set_problem_result("success","q2")
  grade+=10
  feedback.set_problem_feedback("Correct","q2")
else:
  feedback.set_problem_result("failed","q2")
  feedback.set_problem_feedback("In wireshark, you can look at Conversations to see the different conversations in the packet trace then click on TCP or UDP to find the TCP/UDP flows contained in the trace.","q2") 

if(a3==r3):
  feedback.set_problem_result("success","q3")
  grade+=10
  feedback.set_problem_feedback("Correct","q3")
else:
  feedback.set_problem_result("failed","q3")
  feedback.set_problem_feedback("In wireshark, you can look at Conversations to see the different conversations in the packet trace then click on TCP or UDP to find the TCP/UDP flows contained in the trace.","q3") 

if(a4==r4):
  feedback.set_problem_result("success","q4")
  grade+=10
  feedback.set_problem_feedback("Correct","q4")
else:
  feedback.set_problem_result("failed","q4")
  feedback.set_problem_feedback("In wireshark, you can look at Conversations to see the different conversations in the packet trace then click on TCP to find the TCP connections contained in the trace.","q4") 

if(a5==r5):
  feedback.set_problem_result("success","q5")
  grade+=10
  feedback.set_problem_feedback("Correct","q5")
else:
  feedback.set_problem_result("failed","q5")
  feedback.set_problem_feedback("In wireshark, you can look at all DNS requests by adding a filter \"udp.port==53\" in the main window to only see the packets on UDP port 53. Most of the DNS requests are sent to this resolver.","q5") 
  
if(a6==r6):
  feedback.set_problem_result("success","q6")
  grade+=10
  feedback.set_problem_feedback("Correct","q6")
else:
  feedback.set_problem_result("failed","q6")
  feedback.set_problem_feedback("In wireshark, you can obtain a summary of the TCP connections by clicking on Conversations and then look at TCP and order the port B column of the connections.","q6")


if(a7==r7.lower()):
  feedback.set_problem_result("success","q7")
  grade+=10
  feedback.set_problem_feedback("Correct","q7")
else:
  feedback.set_problem_result("failed","q7")
  feedback.set_problem_feedback("In wireshark, you filter a specific connection in the main window and then analyze its packets. For the submission protocol, the server announces its name in the first packet than contains data.","q7")

if(a8==r8):
  feedback.set_problem_result("success","q8")
  grade+=10
  feedback.set_problem_feedback("Correct","q8")
else:
  feedback.set_problem_result("failed","q8")
  feedback.set_problem_feedback("In a TLS connection, you can look at the Server Name Indication extension in the Client Hello to find the name of the server contacted.","q8") 
  

if("firefox" in a9 or "gecko" in a9 or "mozilla" in a9):
  feedback.set_problem_result("success","q9")
  grade+=10
  feedback.set_problem_feedback("Correct","q9")
else:
  feedback.set_problem_result("failed","q9")
  feedback.set_problem_feedback("In an HTTP connection, the User-Agent header indicates the name of the application that sent the request. You can obtain this information from the Conversations by selecting one of these connections and then `Follow Stream`.","q9") 



if(a10==r10):
  feedback.set_problem_result("success","q10")
  grade+=10
  feedback.set_problem_feedback("Correct","q10")
else:
  feedback.set_problem_result("failed","q10")
  feedback.set_problem_feedback("In a TLS connection, you can look at the Server Name Indication extension in the Client Hello to find the name of the server contacted.","q10") 
  
  
  
  
if(grade>=80):
  feedback.set_global_result("success")
else:
  feedback.set_global_result("failed")
      
feedback.set_grade(grade)
