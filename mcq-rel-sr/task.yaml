accessible: true
author: Olivier Bonaventure
categories:
- reliable
context: |-
    .. raw:: html

       <script defer>
       bodyHeight = 0;
       function postSize() {
           if (document.body.scrollHeight != bodyHeight) {
               bodyHeight = document.body.scrollHeight;
               window.parent.postMessage({height: bodyHeight}, "*");
           }
       };
       var target = document.querySelector('body');

       var observer = new MutationObserver(postSize);

       var config = { attributes: true, subtree: true }

       observer.observe(target, config);
       $(document).ready(function(){
           document.querySelector('#content').style.minHeight = '';
           setTimeout(postSize, 0);
       });
       </script>
environment: mcq
evaluate: best
file: ''
groups: false
input_random: '0'
limits:
    memory: '100'
    time: '30'
    output: '2'
name: Selective repeat
network_grading: false
order: 4
problems:
    q1:
        choices:
        -   feedback: 'If this was true, then you would have received `C(OK,3)` as
                the last acknowledgement. '
            text: The receiver has correctly received the three frames that you have
                sent, but one acknowledgement has been lost. No retransmission is
                needed.
        -   text: The receiver has only received the first frame that you have sent.
                It has neither received the second nor the third frame. You plan to
                retransmit only the second frame.
            feedback: |
                In this case, then the receiver should have never sent a second acknowledgement since it only sends acknowledgements when receiving data frames.
        -   text: |
                The frames containing `a` and `c` have been received correctly. The second frame (containing `b`) has not been received.
        -   text: |
                The frames containing `a` and `b` have been received correctly. The third frame (containing `c`) has not been received.
            valid: true
        type: multiple_choice
        header: |4
             You implement a Selective-repeat sender and observe the following frames that you send/receive. Assume that you use a window of three frames.

            .. container:: text-center

               .. image:: mcq-rel-sr/figure1.png
                  :width: 500

            Which affirmation is correct among the ones below :
        name: A selective repeat sender
        limit: 3
    q2:
        choices:
        -   feedback: A selective repeat receiver should store the out-of-sequence
                frames inside its receive buffer.
            text: 'You ignore the out-of-sequence frame and respond with `C(OK,1)`. '
        -   text: 'You place the frame in your buffer and respond with `C(OK,3)`. '
            feedback: 'Placing the out-of-sequence frame inside the buffer is correct.
                Unfortunately, sending `C(OK,3)` indicates that all frames, up to
                and including sequence number `3` have been received in sequence.    '
        -   text: |
                You place the frame in your buffer and respond with `C(OK,1)`.
            valid: true
        -   text: 'You issue a `Data.ind(b)` to deliver the information to your user
                and respond with `C(OK,2)`. '
        -   text: 'You issue a `Data.ind(b)` to deliver the information to your user
                and respond with `C(OK,2)`. '
            feedback: The frame is out of sequence. It cannot be delivered to the
                user. Furthermore, sending `C(OK,2)` indicates that all frames, up
                to and including sequence number `2` have been received in sequence.
        -   text: 'You ignore the out-of-sequence frame and do not respond. '
            feedback: As a selective repeat receiver, you should respond with an acknowledgement
                to each received frame and store the out-of-sequence frames that you
                receive.
        -   text: 'You ignore the out-of-sequence frame and respond with `C(OK,2)`. '
            feedback: ' By sending `C(OK,1)`, you indicate that the second frame has
                been received correctly, which is not the case. As a selective repeat
                receiver, you should respond with an acknowledgement to each received
                frame and store the out-of-sequence frames that you receive.'
        name: A selective repeat receiver
        limit: 3
        type: multiple_choice
        header: |
            You implement a selective repeat receiver and receive the following frames.

            .. container:: text-center

               .. image:: mcq-rel-sr/figure2.png
                  :width: 500

            How do you respond to the reception of the frame `D(3,b)` ?
run_cmd: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
