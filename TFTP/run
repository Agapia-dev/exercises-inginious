#!/bin/python3

from inginious import input, feedback, rst

# random input
filelen = int(input.get_input("@random")[0] *  2000 + 520) #bytes


def isfloat(value):
  try:
    float(value)
    return True
  except:
    return False

def almost(answer,value):
    if((answer<=(value+value/20)) and (answer>=(value-value/20))):
        return True
    else:   
        return False

grade=0

# question q1, 512 bytes of data + 4 bytes of header
answer1= input.get_input("q1")
if(isfloat(answer1)):
    a1=int(answer1)
    if (a1==516):
        feedback.set_problem_result("success","q1")
        feedback.set_problem_feedback("Correct, 4 bytes of header and at most 512 bytes of data","q1")
        grade+=20
    else:
        if (a1==512):
            feedback.set_problem_result("failed","q1")
            feedback.set_problem_feedback("Incorrect, you also need to take into account the header","q1")
            grade+=10
        else:
            feedback.set_problem_result("failed","q1")
            feedback.set_problem_feedback("Incorrect, check Figure 5-2 of RFC1350","q1")
else:
    feedback.set_problem_result("failed","q1")
    feedback.set_problem_feedback("Your answer is not a number","q1")

# question q2 4 bytes of header
answer2= input.get_input("q2")
if(isfloat(answer2)):
    a2=int(answer2)
    if (a2==4):
        feedback.set_problem_result("success","q2")
        feedback.set_problem_feedback("Correct, 2 bytes for the Opcode and 2 bytes for the Block ID","q2")
        grade+=20
    else:
        feedback.set_problem_result("failed","q2")
        feedback.set_problem_feedback("Incorrect, check Figure 5-2 of RFC1350","q2")
else:
    feedback.set_problem_result("failed","q2")
    feedback.set_problem_feedback("Your answer is not a number","q2")

# question blocks of 512 with a block of 0 at the end if required
answer3= input.get_input("q3")

if(isfloat(answer3)):
    a3=int(answer3)
    nblocks=((filelen+1)//512)+1
    if(a3==nblocks):
        feedback.set_problem_result("success","q3")
        feedback.set_problem_feedback("Correct","q3")
        grade+=50
    else:
        if( (a3==nblocks-1) or (a3==nblocks+1) ):
            feedback.set_problem_result("failed","q3")
            feedback.set_problem_feedback("Incorrect, check your computation.","q3")
            grade+=20
        else:
            feedback.set_problem_result("failed","q3")
            feedback.set_problem_feedback("Incorrect, read again RFC1350","q3")
else:
    feedback.set_problem_result("failed","q3")
    feedback.set_problem_feedback("Your answer is not a number","q3")

# block id start at 1
answer4= input.get_input("q4")
if(isfloat(answer4)):
    a4=int(answer4)
    if(a4==1):
        feedback.set_problem_result("success","q4")
        feedback.set_problem_feedback("Correct","q4")
        grade+=10
    else:
        feedback.set_problem_result("failed","q4")
        feedback.set_problem_feedback("Incorrect, read again RFC1350","q4") 
    
# final result
feedback.set_grade(grade)
if(grade > 50):
    feedback.set_global_result("success")
else:
    feedback.set_global_result("failed")
    
    
